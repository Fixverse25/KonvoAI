version: '3.8'

services:
  # =============================================================================
  # Backend Service (Python FastAPI)
  # =============================================================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: eva-dev-backend
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    environment:
      - ENVIRONMENT=development
      - AZURE_SPEECH_KEY=${AZURE_SPEECH_KEY}
      - AZURE_SPEECH_REGION=${AZURE_SPEECH_REGION}
      - AZURE_SPEECH_LANGUAGE=${AZURE_SPEECH_LANGUAGE:-en-US}
      - AZURE_SPEECH_VOICE=${AZURE_SPEECH_VOICE:-en-US-AriaNeural}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - CLAUDE_MODEL=${CLAUDE_MODEL:-claude-3-sonnet-20240229}
      - CLAUDE_MAX_TOKENS=${CLAUDE_MAX_TOKENS:-4000}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - MAX_AUDIO_DURATION_SECONDS=${MAX_AUDIO_DURATION_SECONDS:-30}
      - SILENCE_TIMEOUT_SECONDS=${SILENCE_TIMEOUT_SECONDS:-3}
      - AUDIO_SAMPLE_RATE=${AUDIO_SAMPLE_RATE:-16000}
      - RATE_LIMIT_REQUESTS_PER_MINUTE=${RATE_LIMIT_REQUESTS_PER_MINUTE:-60}
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - eva-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # =============================================================================
  # Frontend Service (Static HTML/CSS/JS)
  # =============================================================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: konvoai-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    networks:
      - eva-dev-network
    depends_on:
      - backend
    restart: unless-stopped

  # =============================================================================
  # Redis (for session management and caching)
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: eva-dev-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - eva-dev-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # Nginx (Reverse Proxy for Development)
  # =============================================================================
  nginx:
    image: nginx:alpine
    container_name: eva-dev-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - eva-dev-network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

# =============================================================================
# Networks
# =============================================================================
networks:
  eva-dev-network:
    driver: bridge
    name: eva-dev-network

# =============================================================================
# Volumes
# =============================================================================
volumes:
  redis_data:
    driver: local
    name: eva-dev-redis-data

version: '3.8'

services:
  # =============================================================================
  # Backend Service (Python FastAPI) - Production
  # =============================================================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: eva-dev-backend-prod
    environment:
      - ENVIRONMENT=production
      - AZURE_SPEECH_KEY=${AZURE_SPEECH_KEY}
      - AZURE_SPEECH_REGION=${AZURE_SPEECH_REGION}
      - AZURE_SPEECH_LANGUAGE=${AZURE_SPEECH_LANGUAGE:-en-US}
      - AZURE_SPEECH_VOICE=${AZURE_SPEECH_VOICE:-en-US-AriaNeural}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - CLAUDE_MODEL=${CLAUDE_MODEL:-claude-3-sonnet-20240229}
      - CLAUDE_MAX_TOKENS=${CLAUDE_MAX_TOKENS:-4000}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - LOG_LEVEL=${LOG_LEVEL:-WARNING}
      - MAX_AUDIO_DURATION_SECONDS=${MAX_AUDIO_DURATION_SECONDS:-30}
      - SILENCE_TIMEOUT_SECONDS=${SILENCE_TIMEOUT_SECONDS:-3}
      - AUDIO_SAMPLE_RATE=${AUDIO_SAMPLE_RATE:-16000}
      - RATE_LIMIT_REQUESTS_PER_MINUTE=${RATE_LIMIT_REQUESTS_PER_MINUTE:-60}
    networks:
      - eva-dev-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =============================================================================
  # Frontend Service (Static HTML/CSS/JS) - Production
  # =============================================================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: konvoai-frontend-prod
    networks:
      - eva-dev-network
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'
        reservations:
          memory: 128M
          cpus: '0.05'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =============================================================================
  # Redis (Production Configuration)
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: eva-dev-redis-prod
    volumes:
      - redis_data:/data
      - ./redis/redis.prod.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - eva-dev-network
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =============================================================================
  # Nginx (Production Reverse Proxy with SSL)
  # =============================================================================
  nginx:
    image: nginx:alpine
    container_name: eva-dev-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - eva-dev-network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =============================================================================
  # Monitoring (Optional - Uncomment if needed)
  # =============================================================================
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: eva-dev-prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus_data:/prometheus
  #   networks:
  #     - eva-dev-network
  #   restart: unless-stopped

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: eva-dev-grafana
  #   ports:
  #     - "3001:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   networks:
  #     - eva-dev-network
  #   restart: unless-stopped

# =============================================================================
# Networks
# =============================================================================
networks:
  eva-dev-network:
    driver: bridge
    name: eva-dev-network-prod

# =============================================================================
# Volumes
# =============================================================================
volumes:
  redis_data:
    driver: local
    name: eva-dev-redis-data-prod
  # prometheus_data:
  #   driver: local
  #   name: eva-dev-prometheus-data
  # grafana_data:
  #   driver: local
  #   name: eva-dev-grafana-data
